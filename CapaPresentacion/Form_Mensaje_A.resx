<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEEAAABBCAYAAACO98lFAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA37AAAN+wELdzWbAAAAB3RJ
        TUUH4gsUAwkM5cGoywAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAP7SURBVHhe
        7Zs9jw1hGIZXsWstlUalEPETBMmiVCCCgkrUIv6ABMlGiND4DwoR8VloxEchKpUGQdgodIKCBOu6531O
        7LMzZ77PfMhcyZ2cfZ+PefbeM3POnvPO1MDAwEBZlpaWZtBsi1ptozQDB1yD9qEz6Db6iLrAd/QKXUeH
        0KyNXC803m4H6gOP0CobvTo009P9AvqF+sJrGz8R4rvRSbTHlsZD0jR6jvrENzRvv4KDdf1BrylpGXfR
        nKXEIXg+SusPX1GaAXeUlIBOn7gRLG5D404BNdMFaDOq79wrCTNsQDvQeltysJ5mwIjHaK2VREV6FUi6
        COqpdszSegHz5jFgxBMUjODB3mgpzvEooScwbxEDRjxFcyo+Hf3ouW+9ewHzljFgxFU1uBEeO45Y/87D
        rFUMEJ/V5E147Nhix+g0zFnVAPFJjf6Ex47WXwWyYMY6DBAX1SyGHaezMGJdBjxEs70zgfHqNCC8aQo/
        e6JAB2G0+g0QYc1joU7BWJMxQIR1j4U6AyNNzgARYh4L5YL0eXQC7bKlWqHvZA0QIe6xUCqk6eMufbqz
        nFso+UAloNfkDRAhx2OhsZAiAx5EyXHSD5gTejRjgAh5HgslQjjNgBGVjKC2OQNEyPVYKAahPAaMKGUE
        Nc0aIEK+x0IOljVcXgNGFDKC3OYNEKHGYyEHywshWphcA5HTjgEi1Hks5GD5bYiWInUwYu0ZIEKtx0IO
        lquYIBIHZK1dA0So91jIwfK5EK2EG5TH7RsgQg+PhRws63uJohfGJKKBUTcMEKGPx0IxCBV5iUxDg+uL
        kKpUN0CEXh4LJUK4LiOqUo8BIvTzWGgspLRtxFgDWN+KnqFTtpQNyTEslAppbRmRZoC+SfuiJPiBpi2U
        Tsj3WCgTUps2Iq8BI/LtXbBkh4VyQXpTRqReA4i9jLI8zZggKJm0EZkXQeJ6+q+kORMEZZMyItMAQU77
        JghK6zYilwGCvG6YICivy4jcBghyu2OCoEVVIwoZIMjvlgmCNmWNKGyAoKZ7JghaFTWilAGCum6aIGiX
        14jSBghqu2uCoGWWEZUMENRXMqGR/Qn0HGdEZQMEPX5G3TwzFk6HxMZ2qtBXH6Rov+R79AFdQpU3bdNj
        I1rJooWzIbnXe5YE8x4IYzvuWTgbkv+H3Ws3w9iOBQtnQ3Kv9zEy59EwbozDlpINyb3d0cp8MmDlZwji
        HVpnafmgoBd7m3V8tAkdREmngPiNyu2VoLBvu9zHccV+peJQ3Mf7HVbyAuV7gzQOGuh1vG93vgidApdR
        NQOWQ7M+3QOl70h32uj1QuOu3g23iHSxPov2o383bzQBB9Tpov8B2lK+/wUGBgYGSjM19RevkEt6Xa3g
        /wAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>